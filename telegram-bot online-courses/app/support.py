from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from sqlalchemy.ext.asyncio import AsyncSession
from app.database.requests import get_user_telegram_ids, get_admin_ids
from app.keyboards import menu 

support_router = Router()

class SupportStates(StatesGroup):
    WAITING_QUESTION = State()
    WAITING_ANSWER = State()

@support_router.callback_query(F.data == "support")
async def support_callback(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text(
        "‚úâÔ∏è –ú–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –ø—Ä—è–º–æ –∑–¥–µ—Å—å!\n\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —ç—Ç–æ—Ç —á–∞—Ç.",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel_support')]
        ])  # –ó–¥–µ—Å—å –±—ã–ª–∞ –æ—à–∏–±–∫–∞: —Å–∫–æ–±–∫–∏ –Ω–µ –∑–∞–∫—Ä—ã—Ç—ã –¥–ª—è InlineKeyboardMarkup
    )
    await state.set_state(SupportStates.WAITING_QUESTION)
    await callback.answer()

@support_router.callback_query(F.data == "cancel_support")
async def cancel_support(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.edit_text(
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
        reply_markup=menu 
    )
    await callback.answer()


@support_router.message(SupportStates.WAITING_QUESTION)
async def process_question(message: Message, state: FSMContext):
    try:
        await state.update_data(
            user_id=message.from_user.id,
            username=message.from_user.username,
            question=message.text
        )
        
        admins = get_admin_ids()

        for admin_id in admins:
            try:
                await message.bot.send_message(
                    admin_id,
                    f"‚ùì –í–æ–ø—Ä–æ—Å –æ—Ç @{message.from_user.username}:\n\n{message.text}",
                    reply_markup=InlineKeyboardMarkup(inline_keyboard=[[
                        InlineKeyboardButton(
                            text="üì® –û—Ç–≤–µ—Ç–∏—Ç—å",
                            callback_data=f"answer_{message.from_user.id}"
                        )
                    ]])
                )
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É {admin_id}: {e}")
        
        await message.answer("‚úÖ –í–∞—à –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º")
        
    except Exception as e:
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–æ–ø—Ä–æ—Å–∞")
        print(f"Error in process_question: {e}")
    finally:
        await state.clear()

@support_router.callback_query(F.data.startswith("answer_"))
async def start_answer(callback: CallbackQuery, state: FSMContext):
    user_id = int(callback.data.split('_')[1])
    await state.update_data(user_id=user_id)
    
    await callback.message.edit_text(
        f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID: {user_id}):",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel_answer')]
        ])  # –ó–∞–∫—Ä—ã—Ç–∞ —Å–∫–æ–±–∫–∞ –¥–ª—è InlineKeyboardMarkup
    )
    await state.set_state(SupportStates.WAITING_ANSWER)
    await callback.answer()

@support_router.message(SupportStates.WAITING_ANSWER)
async def send_answer(message: Message, state: FSMContext):
    data = await state.get_data()
    try:
        await message.bot.send_message(
            data['user_id'],
            f"üì© –û—Ç–≤–µ—Ç –æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏:\n\n{message.text}"
        )
        await message.answer("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
    except:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞?")
    
    await state.clear()

@support_router.callback_query(F.data == "cancel_answer")
async def cancel_admin_answer(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.edit_text("–û—Ç–≤–µ—Ç –æ—Ç–º–µ–Ω—ë–Ω")
    await callback.answer()
